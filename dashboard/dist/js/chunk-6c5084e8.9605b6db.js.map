{"version":3,"sources":["webpack:///./src/requests/users.request.js","webpack:///./src/views/Users/List.vue","webpack:///src/views/Users/List.vue","webpack:///./src/views/Users/List.vue?be9f","webpack:///./src/views/Users/List.vue?fce2"],"names":["params","axios","post","column","value","data","put","list","delete","get","user_id","attrs","model","_vm","callback","$set","expression","staticClass","$store","getters","language","loading_btn","_c","rows","scopedSlots","key","item","on","$$v","selected_rows","delete_dialog","snackbar","staticRenderFns","users","search","loading","text","color","selected_users","headers","align","sortable","computed","mounted","methods","addUsers","requests","r","finally","deleteUsers","deleteUsersList","readUsers","catch","selectUsers","component"],"mappings":"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","file":"js/chunk-6c5084e8.9605b6db.js","sourcesContent":["\nimport axios from 'axios';\nexport default {\n    \n        async createUsers(params)  {\n            return await axios.post(`users/create` , params)\n        },\n        async createUsersList(params)  {\n            return await axios.post(`users/create/list` , params)\n        },\n        async updateUsersColumn(column , value , data)  {\n            return await axios.put(`users/update_list?${column}=${value}` , data)\n        },\n        async deleteUsersList(list)  {\n            return await axios.delete(`users/delete_list` , {\n                data: {\n                    list:list\n                }\n            })\n        },\n        async reportUsers(column , value)  {\n            return await axios.get(`users/report?${column}=${value}`)\n        },\n        async getAllUsers()  {\n            return await axios.get(`users/all`)\n        },\n        async getOneUsers(user_id)  {\n            return await axios.get(`users/all/${user_id}`)\n        },\n        async getUsersByColumn(column , value)  {\n            return await axios.get(`users/filter?column=${column}&value=${value}`)\n        },\n        async deleteUsers(user_id)  {\n            return await axios.delete(`users/delete/${user_id}`)\n        },\n        async updateUsers(user_id , params)  {\n            return await axios.put(`users/update/${user_id}` , params)\n        },\n}\n        ","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.loading)?_c('v-progress-linear',{attrs:{\"indeterminate\":true}}):_c('v-container',{staticClass:\"my-2\"},[_c('form',{attrs:{\"autocomplete\":\"off\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.addUsers.apply(null, arguments)}}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"lg2\":\"\",\"xl2\":\"\",\"md3\":\"\",\"sm4\":\"\"}},[_c('v-text-field',{staticClass:\"mx-1\",attrs:{\"type\":\"text\",\"label\":_vm.$store.getters.language.data.users.user_name,\"dense\":\"\",\"filled\":\"\",\"required\":\"\"},model:{value:(_vm.users.user_name),callback:function ($$v) {_vm.$set(_vm.users, \"user_name\", $$v)},expression:\"users.user_name\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"lg2\":\"\",\"xl2\":\"\",\"md3\":\"\",\"sm4\":\"\"}},[_c('v-text-field',{staticClass:\"mx-1\",attrs:{\"type\":\"text\",\"label\":_vm.$store.getters.language.data.users.password,\"dense\":\"\",\"filled\":\"\",\"required\":\"\"},model:{value:(_vm.users.password),callback:function ($$v) {_vm.$set(_vm.users, \"password\", $$v)},expression:\"users.password\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"lg2\":\"\",\"xl2\":\"\",\"md2\":\"\",\"sm4\":\"\"}},[_c('v-btn',{attrs:{\"color\":\"primary\",\"loading\":_vm.loading_btn,\"type\":\"submit\",\"x-large\":\"\"}},[_vm._v(_vm._s(_vm.$store.getters.language.data.users.add_btn))])],1)],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"mt-5\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-card',[_c('v-card-text',[_c('v-data-table',{staticClass:\"elevation-0\",attrs:{\"headers\":_vm.headers,\"show-select\":\"\",\"search\":_vm.search,\"items\":_vm.rows,\"item-key\":\"user_id\"},scopedSlots:_vm._u([{key:`item.user_id`,fn:function({ item }){return [_c('div',[_c('v-btn',{staticClass:\"mx-1\",attrs:{\"icon\":\"\",\"to\":'/users-list/'+item.user_id,\"color\":\"teal\"}},[_c('v-icon',[_vm._v(\" mdi-pencil-outline \")])],1),_c('v-btn',{staticClass:\"mx-1\",attrs:{\"color\":\"error\",\"icon\":\"\"},on:{\"click\":function($event){return _vm.selectUsers(item)}}},[_c('v-icon',[_vm._v(\" mdi-delete-outline \")])],1)],1)]}}],null,true),model:{value:(_vm.selected_rows),callback:function ($$v) {_vm.selected_rows=$$v},expression:\"selected_rows\"}})],1),(_vm.selected_rows.length > 0)?_c('v-card-actions',[_c('v-btn',{attrs:{\"color\":\"error\"},on:{\"click\":_vm.deleteUsersList}},[_vm._v(_vm._s(_vm.$store.getters.language.data.users.delete_list_btn))])],1):_vm._e()],1)],1)],1)],1),_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"400\"},model:{value:(_vm.delete_dialog),callback:function ($$v) {_vm.delete_dialog=$$v},expression:\"delete_dialog\"}},[_c('v-card',[_c('v-card-title',[_vm._v(\" \"+_vm._s(_vm.$store.getters.language.data.users.delete_question)+\" \")]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{staticClass:\"elevation-0\",attrs:{\"text\":\"\"},on:{\"click\":function($event){_vm.delete_dialog = false}}},[_vm._v(\" \"+_vm._s(_vm.$store.getters.language.data.users.cancel_btn)+\" \")]),_c('v-btn',{staticClass:\"elevation-0\",attrs:{\"color\":\"error\"},on:{\"click\":function($event){return _vm.deleteUsers(_vm.selected_users.user_id)}}},[_vm._v(\" \"+_vm._s(_vm.$store.getters.language.data.users.yes_btn)+\" \")])],1)],1)],1),_c('v-snackbar',{attrs:{\"color\":_vm.snackbar.color},model:{value:(_vm.snackbar.value),callback:function ($$v) {_vm.$set(_vm.snackbar, \"value\", $$v)},expression:\"snackbar.value\"}},[_vm._v(\" \"+_vm._s(_vm.snackbar.text)+\" \")])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<template>\n    <div>\n        <v-progress-linear :indeterminate=\"true\" v-if=\"loading\"></v-progress-linear>\n            <v-container v-else class=\"my-2\">\n                <form @submit.prevent=\"addUsers\" autocomplete=\"off\">\n                    <v-layout row wrap>\n        \n                    <v-flex xs12 lg2 xl2 md3 sm4>\n                        <v-text-field v-model=\"users.user_name\" type=\"text\" :label=\"$store.getters.language.data.users.user_name\" dense\n                            class=\"mx-1\"  filled required>\n                        </v-text-field>\n                    </v-flex>\n                \n                    <v-flex xs12 lg2 xl2 md3 sm4>\n                        <v-text-field v-model=\"users.password\" type=\"text\" :label=\"$store.getters.language.data.users.password\" dense\n                            class=\"mx-1\"  filled required>\n                        </v-text-field>\n                    </v-flex>\n                \n                        <v-flex xs12 lg2 xl2 md2 sm4>\n                            <v-btn  color=\"primary\" :loading=\"loading_btn\" type=\"submit\" x-large>{{$store.getters.language.data.users.add_btn}}</v-btn>\n                        </v-flex>\n                    </v-layout>\n                </form>\n<v-layout row wrap mt-5>\n    <v-flex xs12>\n        <v-card>\n            <v-card-text>\n                <v-data-table :headers=\"headers\"  show-select v-model=\"selected_rows\"    :search=\"search\" :items=\"rows\" class=\"elevation-0\"\n                    item-key=\"user_id\">\n                    <template v-slot:[`item.user_id`]=\"{ item }\">\n                        <div>\n                            <v-btn icon :to=\"'/users-list/'+item.user_id\"  color=\"teal\" class=\"mx-1\">\n                            <v-icon> mdi-pencil-outline </v-icon>\n                            </v-btn>\n                            <v-btn color=\"error\" icon class=\"mx-1\" @click=\"selectUsers(item)\" >\n                                <v-icon> mdi-delete-outline </v-icon>\n                            </v-btn>\n                        </div>\n                    </template>\n                </v-data-table>\n            </v-card-text>\n            \n            <v-card-actions v-if=\"selected_rows.length > 0\">\n                <v-btn color=\"error\" @click=\"deleteUsersList\">{{$store.getters.language.data.users.delete_list_btn}}</v-btn>\n            </v-card-actions>\n                \n        </v-card>\n    </v-flex>\n</v-layout>\n</v-container>\n<v-dialog v-model=\"delete_dialog\" persistent max-width=\"400\">\n    <v-card>\n        <v-card-title>\n            {{$store.getters.language.data.users.delete_question}}\n        </v-card-title>\n        <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn text class=\"elevation-0\" @click=\"delete_dialog = false\">\n                {{$store.getters.language.data.users.cancel_btn}}\n            </v-btn>\n            <v-btn color=\"error\" class=\"elevation-0\" @click=\"deleteUsers(selected_users.user_id)\">\n                {{$store.getters.language.data.users.yes_btn}}\n            </v-btn>\n        </v-card-actions>\n    </v-card>\n</v-dialog>\n<v-snackbar v-model=\"snackbar.value\" :color=\"snackbar.color\">\n    {{snackbar.text}}\n</v-snackbar>\n</div>\n</template>\n<script>\n    import requests from './../../requests/users.request.js'\n    export default {\n        data() {\n            return {\n                users: {},\n                search: '',\n                loading : true,\n                loading_btn:false,\n                selected_rows : [],\n                snackbar: {\n                    value: false,\n                    text: '',\n                    color: ''\n                },\n                rows:[],\n                selected_users : {},\n                delete_dialog: false,\n                headers: [\n\n                    \n                        { \n                            text: this.$store.getters.language.data.users.user_name,\n                            align: 'start',\n                            sortable: true,\n                            value: 'user_name',\n                        },\n                        { \n                            text: this.$store.getters.language.data.users.password,\n                            align: 'start',\n                            sortable: true,\n                            value: 'password',\n                        },   {\n            text: this.$store.getters.language.data.actions,\n            align: 'start',\n            sortable: true,\n            value: 'user_id',\n        }\n                ],\n            }\n        },\n        computed: {\n            \n            \n        },\n        mounted(){\n            this.readUsers();\n        },\n        methods: {\n            addUsers() {\n                this.loading_btn = true\n                requests.createUsers(this.users).then(r => {\n                    if (r.status == 200) {\n                        this.users = {}\n                        this.rows.push(\n                            r.data.new_data\n                        )\n                        this.snackbar = {\n                            value: true,\n                            text: 'Users Added',\n                            color: 'success'\n                        }\n                    } else {\n                        this.snackbar = {\n                            value: true,\n                            text: 'Fail to add Users',\n                            color: 'error'\n                        }\n                    }\n                })\n                .finally(() => {\n                    this.loading_btn = false\n                })\n\n            },\n            deleteUsers(user_id) {\n                requests.deleteUsers(user_id).then(r => {\n                    this.delete_dialog = false\n                    if (r.status == 200) {\n                        this.rows = this.rows.filter(f =>{\n                            return f.user_id != user_id\n                        })\n                        this.snackbar = {\n                            value: true,\n                            text: 'Users Deleted',\n                            color: 'success'\n                        }\n                    } else {\n                        this.snackbar = {\n                            value: true,\n                            text: 'Delete Faild',\n                            color: 'error'\n                        }\n                    }\n                })\n            },\n            \n            deleteUsersList() {\n                let ids = this.selected_rows.map(m => m.user_id)\n                requests.deleteUsersList(ids).then(r => {\n                    if (r.status == 200) {\n                        this.rows = this.rows.filter(f =>{  \n                            return ids.indexOf(f.user_id) == -1\n                        })\n                        this.snackbar = {\n                            value: true,\n                            text: this.selected_rows.length+' Users Deleted',\n                            color: 'success'\n                        }\n                    } else {\n                        this.snackbar = {\n                            value: true,\n                            text: 'Delete Faild',\n                            color: 'error'\n                        }\n                    }\n                })\n            },\n            \n            readUsers() {\n                this.loading = true\n                requests.getAllUsers().then(r => {\n                    if (r.status == 200) {\n                        this.rows = r.data.rows\n                        this.loading = false\n                    } else {\n                        this.snackbar = {\n                            value: true,\n                            text: 'Fail to read Users',\n                            color: 'error'\n                        }\n                    }\n                })\n                .catch(e => {\n                    this.snackbar = {\n                        value: true,\n                        text: 'Fail to read Users',\n                        color: 'error'\n                    }\n                })\n                .finally(() => {\n                    this.loading = false\n                })\n            },\n            selectUsers(i) {\n                this.selected_users = i\n                this.delete_dialog = true\n            },\n        },\n    }\n</script>\n                    ","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=265c3a6b&\"\nimport script from \"./List.vue?vue&type=script&lang=js&\"\nexport * from \"./List.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}